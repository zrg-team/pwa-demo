{"version":3,"sources":["common/components/widgets/Notification.js","serviceWorker.js","common/components/widgets/Modal.js","pages/NotFoundPage.js","common/routes.js","common/components/widgets/PageLoading.js","common/components/widgets/ProgressLoading.js","common/components/widgets/Loading.js","common/hocs/MainPage.js","common/hocs/Root.js","common/actions/session.js","common/models.js","common/utils/locate.js","common/actions/common.js","common/middlewares/sagas.js","common/reducers/common.js","common/reducers/session.js","common/store.js","common/utils/cookies.js","common/middlewares/index.js","index.js"],"names":["instanceNotificationComponent","Component","props","state","isShow","component","undefined","notificationSystem","React","createRef","show","bind","messages","this","current","addNotification","global","ref","data","console","log","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","event","Event","dispatchEvent","onUpdate","onSuccess","catch","error","instanceModalComponent","NotFoundPage","loading","timeout","setTimeout","setState","clearTimeout","style","width","height","display","justifyContent","alignItems","flexDirection","backgroundImage","id","color","className","href","Root","key","path","exact","activateModal","deactivateModal","getApplicationNode","deactiveCallback","title","document","getElementById","hide","PageLoading","instance","isVisible","instanceProgressLoading","ProgressLoading","initElement","el","element","toHiddenState","setAttribute","options","count","runningTimerId","hidingTimerId","cls","thumbStyle","data-state","progressEl","querySelector","outerHTML","offsetHeight","err","getAttribute","defaultProps","hideAll","MainPage","nextProps","store","Loading","type","Modal","Notification","connect","dispatch","nextState","addEventListener","message","level","action","label","callback","ready","unregister","persistor","history","fetchEnd","createAction","fetchStart","fetchSuccess","fetchFailure","loadStart","loadEnd","setSessionLoading","DEFAULT_LANGUAGE","I18n","defaultLocale","fallbacks","translations","en","require","vi","language","a","appLocale","moment","locale","clearAll","setUserLanguage","setRequestTimeout","onFetchStart","onFetchSuccess","onFetchFailure","watchFetchStart","watchFetchSuccess","watchFetchFailure","watchFetchEnd","onLoadingChanged","watchLoadStart","watchLoadEnd","watchLanguageChange","watchRehydrateChange","payload","response","takeEvery","toString","select","session","isLoading","loadingCount","onLanguageChanged","setLocate","onRehydrateChanged","takeLatest","REHYDRATE","defaultState","handlers","actions","handleActions","updateFetching","fetching","upDown","url","sessionLoading","createHashHistory","storage","blacklist","createReducers","reducers","persistCombineReducers","common","commonReducers","sessionReducers","mapCookieToStorage","initialState","JSON","parse","localStorage","getItem","commonStorage","defaultCommonState","token","cname","cvalue","name","ca","decodeURIComponent","cookie","split","i","length","c","charAt","substring","indexOf","getCookie","stringify","setItem","composeEnhancers","compose","buildStore","sagaMiddleware","createSagaMiddleware","createStore","middlewares","push","createLogger","collapsed","applyMiddleware","apply","createMiddlewares","persistStore","run","getState","rootSaga","all","commonSagas","createSaga","ReactDOM","render","URL","process","origin","fetch","contentType","headers","get","status","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.bd64b07c.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport NotificationSystem from 'react-notification-system'\n\nlet instanceNotificationComponent\nclass NotificationComponent extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      isShow: false,\n      component: undefined\n    }\n\n    this.notificationSystem = React.createRef()\n    this.show = this.show.bind(this)\n  }\n\n  show (messages) {\n    this.notificationSystem.current.addNotification(messages)\n  }\n\n  componentDidMount () {\n    const { global } = this.props\n    if (global) {\n      instanceNotificationComponent = this\n    }\n  }\n\n  componentWillUnmount () {\n    const { global } = this.props\n    if (global) {\n      instanceNotificationComponent = null\n    }\n  }\n\n  render () {\n    return <NotificationSystem ref={this.notificationSystem} />\n  }\n}\n\nexport default {\n  Component: NotificationComponent,\n  show (data) {\n    console.log('instanceNotificationComponent', instanceNotificationComponent)\n    instanceNotificationComponent && instanceNotificationComponent.show(data)\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register (config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              const event = new Event('newContentAvailable')\n              window.dispatchEvent(event)\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker (swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import { Component } from 'react'\n// import Card from '@material-ui/core/Card'\n\nlet instanceModalComponent\nclass ModalComponent extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      isShow: false,\n      component: undefined\n    }\n\n    this.activateModal = this.activateModal.bind(this)\n    this.deactivateModal = this.deactivateModal.bind(this)\n    this.getApplicationNode = this.getApplicationNode.bind(this)\n  }\n\n  activateModal (component) {\n    this.setState({\n      isShow: true,\n      component\n    })\n  }\n\n  deactivateModal () {\n    const { deactiveCallback } = this.state\n    deactiveCallback && deactiveCallback()\n    this.setState({\n      isShow: false,\n      title: '',\n      component: undefined\n    })\n  }\n\n  getApplicationNode () {\n    return document.getElementById('application')\n  }\n\n  componentDidMount () {\n    const { global } = this.props\n    if (global) {\n      instanceModalComponent = this\n    }\n  }\n\n  componentWillUnmount () {\n    const { global } = this.props\n    if (global) {\n      instanceModalComponent = null\n    }\n  }\n\n  render () {\n    // const { classes } = this.props\n    const { isShow, component } = this.state\n    if (!isShow || !component) {\n      return null\n    }\n    return (\n      component\n    )\n  }\n}\n\nexport default {\n  Component: ModalComponent,\n  show (component) {\n    instanceModalComponent && instanceModalComponent.activateModal(component)\n  },\n  hide () {\n    instanceModalComponent && instanceModalComponent.deactivateModal()\n  },\n  getApplicationNode () {\n    return (instanceModalComponent && instanceModalComponent.getApplicationNode()) || undefined\n  }\n}\n","import React from 'react'\nimport '../common/styles/no-page.css'\n\nexport default class NotFoundPage extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      loading: true\n    }\n\n    this.timeout = setTimeout(() => {\n      this.setState({\n        loading: false\n      })\n    }, 3000)\n  }\n\n  componentWillUnmount () {\n    if (this.timeout) {\n      clearTimeout(this.timeout)\n    }\n  }\n\n  render () {\n    return (\n      <div\n        style={{\n          width: '100%',\n          height: '100%',\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          flexDirection: 'row',\n          backgroundImage: 'linear-gradient( 359.3deg,  rgba(196,214,252,1) 1%, rgba(187,187,187,0) 70.9% )'\n        }}\n      >\n        <div id='oopss'>\n          <div id='error-text'>\n            <span>404</span>\n            <p style={{ color: '#5b5a5a' }}>PAGE NOT FOUND</p>\n            <p className='hmpg'><a href='/' className='back'>Back To Home</a></p>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport { Route, Switch } from 'react-router'\nimport NotFoundPage from '../pages/NotFoundPage'\n\nexport default class Root extends Component {\n  render () {\n    // const { store } = this.props\n    return (\n      <>\n        <Switch>\n          <Route key='' path='/' exact component={NotFoundPage} />,\n          <Route component={NotFoundPage} />\n        </Switch>\n      </>\n    )\n  }\n}\n","import React, { Component } from 'react'\n\nclass PageLoading extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      isShow: false\n    }\n  }\n\n  show () {\n    this.setState({\n      isShow: true\n    })\n  }\n\n  hide () {\n    this.setState({\n      isShow: false\n    })\n  }\n\n  isVisible () {\n    const { isShow } = this.state\n    return isShow\n  }\n\n  componentWillMount () {\n    PageLoading.instance = this\n  }\n\n  componentWillUnmount () {\n    delete PageLoading.instance\n  }\n\n  render () {\n    const { isShow } = this.state\n\n    if (!isShow) {\n      return null\n    }\n\n    return (\n      <div className='loading-container'>\n        <div className='loading-inner' />\n      </div>\n    )\n  }\n}\n\nexport default {\n  Component: PageLoading,\n  show () {\n    PageLoading.instance && PageLoading.instance.show()\n  },\n  hide () {\n    PageLoading.instance && PageLoading.instance.hide()\n  },\n  isVisible () {\n    return PageLoading.instance.isVisible()\n  }\n}\n","import React, { Component } from 'react'\n\nlet instanceProgressLoading = null\nclass ProgressLoading extends Component {\n  static defaultProps = {\n    cls: '',\n    style: {},\n    thumbStyle: {}\n  }\n\n  constructor (props) {\n    super(props)\n    this.state = {\n      state: 'hidden',\n      options: {}\n    }\n    this.count = 0\n    this.runningTimerId = null\n    this.hidingTimerId = null\n  }\n\n  initElement = (el) => {\n    this.element = el\n  }\n\n  render () {\n    const { options } = this.state\n    let { cls, thumbStyle } = this.props\n    let className = `loader-60devs ${cls}`\n    return (\n      <div className={className} style={options.style || {}} data-state={this.state.state} ref={this.initElement}>\n        <div className='loader-60devs-progress' style={thumbStyle} />\n      </div>\n    )\n  }\n\n  show (options = {}) {\n    try {\n      const { element } = this\n\n      if (++this.count > 1 || !element) {\n        return false\n      }\n      \n      clearTimeout(this.hidingTimerId)\n      let progressEl = element.querySelector('.loader-60devs-progress')\n  \n      element.setAttribute('data-state', 'hidden')\n      // the only working way to restart a transition on firefox\n      progressEl.outerHTML = progressEl.outerHTML\n      let offset = element.offsetHeight\n      element.setAttribute('data-state', '')\n      offset = element.offsetHeight\n      element.setAttribute('data-state', 'running')\n      this.setState({\n        options\n      })\n    } catch (err) {\n      console.log('err', err)\n    }\n  }\n\n  hide () {\n    if (--this.count > 0) {\n      return\n    }\n    this.element.setAttribute('data-state', 'finishing')\n    this.hidingTimerId = setTimeout(this.toHiddenState, 500)\n    this.setState({\n      options: {}\n    })\n  }\n\n  hideAll () {\n    this.count = 1\n    this.hide()\n  }\n\n  toHiddenState = () => {\n    this.element.setAttribute('data-state', 'hidden')\n  }\n\n  componentWillMount () {\n    instanceProgressLoading = this\n  }\n\n  componentWillUnmount () {\n    clearTimeout(this.hidingTimerId)\n    // delete instanceProgressLoading\n    instanceProgressLoading = null\n  }\n\n  isVisible () {\n    return this.element.getAttribute('data-state') !== 'hidden'\n  }\n}\n\nexport default {\n  Component: ProgressLoading,\n  show (options = {}) {\n    instanceProgressLoading && instanceProgressLoading.show(options)\n  },\n  hide () {\n    instanceProgressLoading && instanceProgressLoading.hide()\n  },\n  hideAll () {\n    instanceProgressLoading && instanceProgressLoading.hideAll()\n  },\n  isVisible () {\n    return instanceProgressLoading && instanceProgressLoading.isVisible()\n  }\n}\n","import React from 'react'\n\nexport default () => (\n  <div className='loading-session-body'>\n    <div className='loading' />\n  </div>\n)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { HashRouter } from 'react-router-dom'\nimport Routes from '../routes'\nimport Modal from '../components/widgets/Modal'\nimport Notification from '../components/widgets/Notification'\nimport PageLoading from '../components/widgets/PageLoading'\nimport ProgressLoading from '../components/widgets/ProgressLoading'\nimport Loading from '../components/widgets/Loading'\n\nclass MainPage extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      loading: false\n    }\n    this.notificationSystem = React.createRef()\n  }\n\n  shouldComponentUpdate (nextProps) {\n    return false\n  }\n\n  render () {\n    const { loading } = this.state\n    const { store } = this.props\n    if (loading) {\n      return <Loading />\n    }\n    return (\n      <>\n        <HashRouter>\n          <Routes store={store} />\n        </HashRouter>\n        <ProgressLoading.Component />\n        <PageLoading.Component type='bars' />\n        <Modal.Component global />\n        <Notification.Component global />\n      </>\n    )\n  }\n}\n\nexport default connect(\n  (state) => {\n    return {}\n  }, (dispatch) => ({\n    dispatch\n  })\n)(MainPage)\n","import React, { Component } from 'react'\nimport { Provider } from 'react-redux'\nimport { PersistGate } from 'redux-persist/lib/integration/react'\nimport Notification from '../components/widgets/Notification'\nimport { unregister } from '../../serviceWorker'\nimport MainPage from './MainPage'\n\nexport default class Root extends Component {\n  shouldComponentUpdate (nextProps, nextState) {\n    return false\n  }\n\n  async componentDidMount () {\n    try {\n      // TODO: Repare something\n      window.addEventListener('newContentAvailable', () => {\n        Notification.show({\n          message: 'New version available.',\n          level: 'success',\n          action: {\n            label: 'Refresh',\n            callback: function () {\n              unregister(() => {\n                setTimeout(() => {\n                  window.location.reload(window.location.href)\n                }, 5000)\n              })\n            }\n          }\n        })\n      })\n    } catch (error) {\n      console.error('Fatal Error. Cannot Initialize.', error)\n    }\n  }\n\n  render () {\n    const { store, persistor, history } = this.props\n    return (\n      <Provider store={store}>\n        <PersistGate persistor={persistor}>\n          <MainPage\n            store={store}\n            history={history}\n            persistor={persistor}\n          />\n        </PersistGate>\n      </Provider>\n    )\n  }\n}\n","import { createAction } from 'redux-actions'\n\nexport const fetchEnd = createAction('API_FETCH_END')\nexport const fetchStart = createAction('API_FETCH_START')\nexport const fetchSuccess = createAction('API_FETCH_SUCCESS')\nexport const fetchFailure = createAction('API_FETCH_FAILURE')\n\nexport const loadStart = createAction('LOADING_START')\nexport const loadEnd = createAction('LOADING_END')\n\nexport const authetication = createAction('AUTHENTICATION')\n\nexport const setSessionMessages = createAction('SET_SESSION_MESSAGE')\n\nexport const setSessionLoading = createAction('SET_SESSION_LOADING')\n","export const DEFAULT_LANGUAGE = 'en'\n\nexport const TIMEOUT = 30000\n","import I18n from 'i18n-js'\nimport moment from 'moment'\nimport { DEFAULT_LANGUAGE } from '../models'\n\nI18n.defaultLocale = DEFAULT_LANGUAGE\nI18n.fallbacks = true\nI18n.translations = {\n  en: require('../../assets/lang/en.json'),\n  vi: require('../../assets/lang/vi.json')\n}\n\nexport default async function (language) {\n  try {\n    const appLocale = language || DEFAULT_LANGUAGE\n    moment.locale = appLocale\n    I18n.locale = appLocale\n  } catch (error) {\n    console.error(error)\n  }\n}\n","import { createAction } from 'redux-actions'\n\nexport const clearAll = createAction('CLEAR_ALL')\nexport const setUserLanguage = createAction('SET_USER_LANGUAGE')\nexport const setRequestTimeout = createAction('SET_USER_TIMEOUT')\n","\nimport {\n  takeEvery,\n  select,\n  takeLatest\n} from 'redux-saga/effects'\nimport {\n  REHYDRATE\n} from 'redux-persist'\nimport {\n  fetchEnd,\n  fetchStart,\n  fetchSuccess,\n  fetchFailure,\n  loadStart,\n  loadEnd\n} from '../actions/session'\nimport setLocate from '../utils/locate'\nimport {\n  setUserLanguage\n} from '../actions/common'\nimport PageLoading from '../components/widgets/PageLoading'\nimport ProgressLoading from '../components/widgets/ProgressLoading'\n\nfunction * onFetchStart ({ payload: { config } }) {\n  yield ProgressLoading.show()\n  // console.log('Fetch Start', config)\n}\n\nfunction * onFetchSuccess ({ payload: { response, config } }) {\n  yield ProgressLoading.hide()\n  // console.log('Fetch Success', config)\n}\n\nfunction * onFetchFailure ({ payload: { error, config } }) {\n  yield ProgressLoading.hide()\n  // Notification.error(error.message)\n  console.error(error)\n}\n\nfunction * watchFetchStart () {\n  yield takeEvery(fetchStart.toString(), onFetchStart)\n}\nfunction * watchFetchSuccess () {\n  yield takeEvery(fetchSuccess.toString(), onFetchSuccess)\n}\nfunction * watchFetchFailure () {\n  yield takeEvery(fetchFailure.toString(), onFetchFailure)\n}\nfunction * watchFetchEnd () {\n  yield takeEvery(fetchEnd.toString(), onFetchSuccess)\n}\n\nfunction * onLoadingChanged () {\n  // TODO: Do something in redux when loading\n  const isLoading = yield select(state => state.session.isLoading)\n  const loadingCount = yield select(state => state.session.loadingCount)\n  if (isLoading) {\n    PageLoading.show()\n  } else if (loadingCount === 0) {\n    PageLoading.hide()\n  }\n}\n\nfunction onLanguageChanged ({ payload }) {\n  setLocate(payload)\n}\n\nfunction onRehydrateChanged ({ payload }) {\n}\n\nfunction * watchLoadStart () {\n  yield takeEvery(loadStart.toString(), onLoadingChanged)\n}\n\nfunction * watchLoadEnd () {\n  yield takeEvery(loadEnd.toString(), onLoadingChanged)\n}\n\nfunction * watchLanguageChange () {\n  yield takeLatest(setUserLanguage.toString(), onLanguageChanged)\n}\n\nfunction * watchRehydrateChange () {\n  yield takeLatest(REHYDRATE, onRehydrateChanged)\n}\n\nexport default [\n  watchFetchEnd(),\n  watchFetchStart(),\n  watchFetchSuccess(),\n  watchFetchFailure(),\n  watchLoadStart(),\n  watchLoadEnd(),\n  watchLanguageChange(),\n  watchRehydrateChange()\n]\n","import { handleActions } from 'redux-actions'\nimport * as actions from '../actions/common'\n\nexport const defaultState = {\n  language: 'en',\n  timeout: 30000\n}\n\nconst handlers = {\n  [actions.clearAll]: (state, action) => ({ ...defaultState }),\n  [actions.setUserLanguage]: (state, action) => {\n    return {\n      ...state,\n      language: action.payload\n    }\n  },\n  [actions.setRequestTimeout]: (state, action) => {\n    return {\n      ...state,\n      timeout: action.payload\n    }\n  }\n}\n\nexport default handleActions(handlers, defaultState)\n","import { handleActions } from 'redux-actions'\nimport { clearAll } from '../actions/common'\nimport * as actions from '../actions/session'\n\nconst updateFetching = (fetching, payload, upDown) => {\n  const { config } = payload\n  const key = config.key || config.url\n  if (upDown < 0 && fetching[key] + upDown === 0) {\n    delete fetching[key]\n  } else {\n    fetching[key] = (fetching[key] || 0) + upDown\n  }\n  return fetching\n}\n\nconst defaultState = {\n  fetching: {},\n  loadingCount: 0,\n  isLoading: false,\n  messages: {},\n  sessionLoading: false\n}\n\nconst handlers = {\n  [clearAll]: (state, action) => ({ ...defaultState }),\n  [actions.fetchStart]: (state, action) => ({\n    ...state,\n    ...{ fetching: updateFetching(state.fetching, action.payload, 1) }\n  }),\n  [actions.fetchSuccess]: (state, action) => ({\n    ...state,\n    ...{ fetching: updateFetching(state.fetching, action.payload, -1) }\n  }),\n  [actions.fetchEnd]: (state, action) => ({\n    ...state,\n    ...{ fetching: updateFetching(state.fetching, action.payload, -1) }\n  }),\n  [actions.fetchFailure]: (state, action) => ({\n    ...state,\n    ...{ fetching: updateFetching(state.fetching, action.payload, -1) }\n  }),\n  [actions.loadStart]: (state, action) => {\n    return {\n      ...state,\n      ...{\n        loadingCount: state.loadingCount + 1,\n        isLoading: true\n      }\n    }\n  },\n  [actions.loadEnd]: (state, action) => ({\n    ...state,\n    ...{\n      loadingCount: state.loadingCount - 1,\n      isLoading: state.loadingCount > 1\n    }\n  }),\n  [actions.setSessionLoading]: (state, action) => {\n    return {\n      ...state,\n      sessionLoading: action.payload\n    }\n  }\n}\n\nexport default handleActions(handlers, defaultState)\n","import createSagaMiddleware from 'redux-saga'\nimport { createLogger } from 'redux-logger'\nimport { createHashHistory } from 'history'\nimport { persistStore, persistCombineReducers } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport createSaga from './middlewares'\nimport commonReducers, { defaultState as defaultCommonState } from './reducers/common'\nimport sessionReducers from './reducers/session'\nimport { getCookie } from './utils/cookies'\n\nexport const history = createHashHistory()\n\nconst config = {\n  key: 'root',\n  storage,\n  blacklist: ['session']\n}\nconst createMiddlewares = sagaMiddleware => {\n  const middlewares = []\n\n  // Saga Middleware\n  if (sagaMiddleware) {\n    middlewares.push(sagaMiddleware)\n  }\n\n  // Logging Middleware\n  const logger = createLogger({\n    level: 'info',\n    collapsed: true\n  })\n  process.env.NODE_ENV !== 'production' && middlewares.push(logger)\n\n  return applyMiddleware.apply({}, middlewares)\n}\n\nconst createReducers = reducers => {\n  return persistCombineReducers(config, {\n    common: commonReducers,\n    session: sessionReducers,\n    ...reducers\n  })\n}\nfunction mapCookieToStorage () {\n  let initialState\n  try {\n    initialState = {}\n    const storage = JSON.parse(window.localStorage.getItem('persist:root'))\n    const commonStorage = storage && storage.common\n      ? JSON.parse(storage.common)\n      : defaultCommonState\n    commonStorage.token = getCookie('token')\n    storage.common = JSON.stringify(commonStorage)\n    window.localStorage.setItem('persist:root', JSON.stringify(storage))\n  } catch (err) {\n    initialState = undefined\n  }\n  return {\n    ...initialState || {}\n  }\n}\nconst composeEnhancers = process.env.NODE_ENV !== 'production'\n  ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n  : compose\nconst buildStore = (reducers) => {\n  const initialState = mapCookieToStorage()\n  const sagaMiddleware = createSagaMiddleware()\n  const store = createStore(createReducers(reducers), initialState, composeEnhancers(createMiddlewares(sagaMiddleware)))\n\n  const persistor = persistStore(store)\n  if (module.hot) {\n    module.hot.accept(() => {\n      store.replaceReducer(createReducers(reducers))\n    })\n  }\n\n  store.reducers = createReducers(reducers)\n  sagaMiddleware.run(createSaga(store.getState))\n  return { persistor, store }\n}\n\nexport default buildStore()\n","export function setCookie (cname, cvalue) {\n  try {\n    document.cookie = `${cname}=${cvalue};path=/`\n    return true\n  } catch (err) {\n    return false\n  }\n}\nexport function getCookie (cname, cvalue) {\n  try {\n    const name = `${cname}=`\n    const decodedCookie = decodeURIComponent(document.cookie)\n    const ca = decodedCookie.split(';')\n    for (let i = 0; i < ca.length; i++) {\n      let c = ca[i]\n      while (c.charAt(0) === ' ') {\n        c = c.substring(1)\n      }\n      if (c.indexOf(name) === 0) {\n        return (c.substring(name.length, c.length))\n      }\n    }\n  } catch (err) {\n    console.log('getCookie err', err)\n  }\n  return ''\n}\n","import { all } from 'redux-saga/effects'\nimport commonSagas from './sagas'\nexport default getState => {\n  function * rootSaga () {\n    yield all([\n      ...commonSagas\n    ])\n  }\n  return rootSaga\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport Root from './common/hocs/Root'\nimport './common/styles/app.css'\nimport './common/styles/transition.css'\nimport store, { history } from './common/store'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<Root {...store} history={history} />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register()\n"],"sourceRoot":""}